if (m_traceflag & TRACE_SHADOW)
		{
			//TODO: Adventurous Requirement
			//Trace the shadow ray
			for (int i = 0; i < light_list->size(); i++)
			{
				//Get the light direction vector
				Vector3 light = (*light_list)[i]->GetLightPosition() - result.point;
				//Create the shadow Ray
				Ray shadow;

				//Set the ray between the result and the light
				shadow.SetRay(result.point + light * 0.0001, light.Normalise());
				//Find distance between the hitpoint and the light source
				double dist = sqrt(pow(result.point[0] - (*light_list)[i]->GetLightPosition()[0], 2) + pow(result.point[1] - (*light_list)[i]->GetLightPosition()[0], 2) + pow(result.point[2] - (*light_list)[i]->GetLightPosition()[0], 2));

				//If the ray's intersection value is below the distance
				RayHitResult shadowRay = pScene->IntersectByRay(shadow);
				if (shadowRay.t < dist)
				{
					//Cast shadow if an object is hit on way back to light
					if (((Primitive*)shadowRay.data)->GetMaterial()->CastShadow() && ((Primitive*)shadowRay.data))
						outcolour = outcolour * 0.25;
				}
			}
		}
